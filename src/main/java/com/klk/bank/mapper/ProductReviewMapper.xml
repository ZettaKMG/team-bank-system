<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.klk.bank.mapper.ProductReviewMapper">

	<select id="selectAllProductReview" resultType="com.klk.bank.domain.ProductReviewDto">
		WITH RECURSIVE cte AS (
		SELECT p.id,
			   p.product_rev_item_id,
			   p.product_rev_user_id,
			   p.product_rev_content,
			   p.product_rev_inserted,
			   p.product_rev_group_num,
			   p.product_rev_parent_id,
			   p.product_rev_group_depth,
			   p.product_rev_group_end,
               CAST(LPAD(ROW_NUMBER() OVER(ORDER BY p.id), 8, '0') AS CHAR(99)) ord
		FROM Product_rev p    
        WHERE product_rev_group_depth = 0
        
        UNION ALL
        SELECT p.id,
			   p.product_rev_item_id,
			   p.product_rev_user_id,
			   p.product_rev_content,
			   p.product_rev_inserted,
			   p.product_rev_group_num,
			   p.product_rev_parent_id,
			   p.product_rev_group_depth,
			   p.product_rev_group_end,
               CONCAT(ord, LPAD(p.id, 8, '0')) ord
		FROM Product_rev p   
		INNER JOIN cte c ON p.product_rev_parent_id = c.id
)
	SELECT ROW_NUMBER() OVER(ORDER BY ord) rownumber,
		   c.id, c.product_rev_item_id,
		   c.product_rev_user_id, c.product_rev_content, 
	       c.product_rev_inserted, c.product_rev_group_num, 
	       c.product_rev_parent_id, c.product_rev_group_depth,
		   c.product_rev_group_end, IF (u.user_id = #{product_rev_user_id}, 1, 0) own 
	FROM cte c JOIN User u ON c.product_rev_user_id = u.user_id
	WHERE c.product_rev_item_id = #{product_rev_item_id}
	ORDER BY rownumber;
	</select>

	<insert id="insertProductReview" parameterType="com.klk.bank.domain.ProductReviewDto" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
		INSERT INTO Product_rev (product_rev_item_id, product_rev_user_id, product_rev_content)
		VALUES (#{product_rev_item_id}, #{product_rev_user_id}, #{product_rev_content})
	</insert>
	
	<select id="selectProductReview" resultType="com.klk.bank.domain.ProductReviewDto">
		SELECT p.id,
			   p.product_rev_item_id,
			   p.product_rev_user_id,
			   p.product_rev_content,
			   p.product_rev_inserted,
			   p.product_rev_group_num,
			   p.product_rev_parent_id,
			   p.product_rev_group_depth,
			   p.product_rev_group_end
		FROM Product_rev p   
		WHERE p.id = #{id}
	</select>
	
	<update id="updateProductReview">
		UPDATE Product_rev
		SET product_rev_content = #{product_rev_content},
			product_rev_group_num = #{product_rev_group_num},				
			product_rev_group_end = #{product_rev_group_end}
		WHERE id = #{id}
	</update>
	
	<delete id="deleteProductReview">
		DELETE FROM Product_rev
		WHERE id = #{id}
	</delete>
	
	<insert id="insertProductReviewReply">
		INSERT INTO Product_rev (product_rev_item_id, product_rev_user_id, product_rev_content, product_rev_group_num, product_rev_parent_id, product_rev_group_depth, product_rev_group_end)
		VALUES (#{product_rev_item_id}, #{product_rev_user_id}, #{product_rev_content}, #{product_rev_group_num}, #{product_rev_parent_id}, #{product_rev_group_depth}, #{product_rev_group_end})
	</insert>
	
	<delete id="deleteProductReviewByProductId">
		DELETE FROM Product_rev
		WHERE product_rev_item_id = #{product_rev_item_id}
	</delete>
	
	<delete id="deleteProductReviewByUserId">
		DELETE FROM Product_rev
		WHERE product_rev_user_id = #{user_id}
	</delete>
	
</mapper>